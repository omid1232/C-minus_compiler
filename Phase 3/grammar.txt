1. Program -> DeclarationList  
2. DeclarationList -> Declaration DeclarationList | EPSILON  
3. Declaration -> #declare DeclarationInitial DeclarationPrime  
4. DeclarationInitial -> #push_type TypeSpecifier #declare_id ID  
5. DeclarationPrime -> FunDeclarationPrime | VarDeclarationPrime  
6. VarDeclarationPrime -> ; | [ #pnum NUM ] #declare_arr ;  
7. FunDeclarationPrime -> #save #declare_func #new_scope ( #params_start Params #params_end ) CompoundStmt #end_scope #func_return #func_save_resolve
8. TypeSpecifier -> int | void  
9. Params -> #push_type int #declare_id ID ParamPrime ParamList | void  
10. ParamList -> , Param ParamList | EPSILON  
11. Param -> #declare DeclarationInitial ParamPrime  
12. ParamPrime -> [ ] #declare_arr | EPSILON  
13. CompoundStmt -> { DeclarationList StatementList }  
14. StatementList -> Statement StatementList | EPSILON  
15. Statement -> ExpressionStmt | CompoundStmt | SelectionStmt | IterationStmt | ReturnStmt  
16. ExpressionStmt -> Expression ; | break ; | ;  
17. SelectionStmt -> if ( Expression ) #save #new_scope Statement #end_scope else #jpf_save #new_scope Statement #end_scope #jp
18. IterationStmt -> while #label ( Expression ) #save #new_scope Statement #end_scope #while_end
19. ReturnStmt -> return ReturnStmtPrime  
20. ReturnStmtPrime -> ; | #pret_value Expression #assign ;
21. Expression -> SimpleExpressionZegond | #pid ID B 
22. B -> = #inc_eq Expression #dec_eq #assign | [ #arr_ass_flag Expression #arr_ass_reset ] #parr H | SimpleExpressionPrime  
23. H -> = #inc_eq Expression #dec_eq #assign | G D C  
24. SimpleExpressionZegond -> AdditiveExpressionZegond C 
25. SimpleExpressionPrime -> AdditiveExpressionPrime C  
26. C -> Relop AdditiveExpression #math_exec | EPSILON  
27. Relop -> #push_op < | #push_op ==  
28. AdditiveExpression -> Term D  
29. AdditiveExpressionPrime -> TermPrime D  
30. AdditiveExpressionZegond -> TermZegond D  
31. D -> Addop Term #math_exec D | EPSILON  
32. Addop -> #push_op + | #push_op -    
33. Term -> SignedFactor G  
34. TermPrime -> SignedFactorPrime G  
35. TermZegond -> SignedFactorZegond G  
36. G -> #push_op * SignedFactor #math_exec G | EPSILON  
37. SignedFactor -> + Factor | #p0 #push_op - Factor #math_exec | Factor  
38. SignedFactorPrime -> FactorPrime  
39. SignedFactorZegond -> + Factor | #p0 #push_op - Factor #math_exec | FactorZegond  
40. Factor -> ( Expression ) | #pid ID VarCallPrime | #pnum NUM  
41. VarCallPrime -> ( #args_start Args ) #func_call | VarPrime  
42. VarPrime -> [ #arr_ass_flag Expression #arr_ass_reset ] #parr | EPSILON  
43. FactorPrime -> ( #args_start Args ) #func_call | EPSILON  
44. FactorZegond -> ( Expression ) | #pnum NUM  
45. Args -> ArgList | EPSILON  
46. ArgList -> #func_ass_flag Expression #func_ass_reset ArgListPrime  
47. ArgListPrime -> , #func_ass_flag Expression #func_ass_reset ArgListPrime | EPSILON 
